"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.routerAdmin = void 0;
const express_1 = require("express");
const AccessControlListController_1 = require("./controllers/AccessControlListController");
const PermissionController_1 = require("./controllers/PermissionController");
const UserSafeController_1 = require("./controllers/UserSafeController");
const ensuredAuthenticated_1 = require("./middleware/ensuredAuthenticated");
const permission_1 = require("./middleware/permission");
const app = (0, express_1.Router)();
exports.routerAdmin = app;
app.use([new ensuredAuthenticated_1.ensuredAuthenticated().middler]);
app.post('/acl/add/user', (0, permission_1.can)(["acl", "admin"]), new AccessControlListController_1.AccessControlListController().add);
app.delete('/acl/remove/user', (0, permission_1.can)(["acl", "admin"]), new AccessControlListController_1.AccessControlListController().remove);
app.get('/acl/list/user/:id', (0, permission_1.can)(["acl", "admin"]), new AccessControlListController_1.AccessControlListController().list);
app.post('/permission/add', new PermissionController_1.PermissionController().add);
app.get('/permission/list', new PermissionController_1.PermissionController().list);
app.post('/oauth/create', new UserSafeController_1.UserSafeController().createOauth);
app.put('/oauth/reset', new UserSafeController_1.UserSafeController().resetOauth);
app.delete('/oauth/remove', new UserSafeController_1.UserSafeController().removeOauth);
app.get('/oauth/block/:id', new UserSafeController_1.UserSafeController().blockOauth);
app.get('/oauth/unlock/:id', new UserSafeController_1.UserSafeController().unlockOauth);
app.get('/user/list', (0, permission_1.can)(["admin", "moderator"]), new UserSafeController_1.UserSafeController().list);
app.get('/user/:id', (0, permission_1.can)(["admin", "moderator"]), new UserSafeController_1.UserSafeController().info);
app.post('/user/add', (0, permission_1.can)(["admin", "moderator"]), new UserSafeController_1.UserSafeController().register);
app.put('/user/block', (0, permission_1.can)(["admin", "moderator"]), new UserSafeController_1.UserSafeController().block);
app.put('/user/unlock', (0, permission_1.can)(["admin", "moderator"]), new UserSafeController_1.UserSafeController().unlock);
app.put('/user/edit', (0, permission_1.can)(["admin", "moderator"]), new UserSafeController_1.UserSafeController().edit);
app.delete('/user/remove', (0, permission_1.can)(["admin"]), new UserSafeController_1.UserSafeController().remove);
